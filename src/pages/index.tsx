import { useState } from "react";
import Head from "next/head";

import styles from "@/styles/Home.module.css";

import Person from "@/components/person";

import { getProject, getUserPromises } from "@/services/jira";
import { reduceByIndexOrder } from "@/helpers";
import { JIRA_USERS, NAMES } from "@/constants";

let counter = 0;

export default function Home({ project, users }: any) {
  const [currentUser, setCurrentUser] = useState(NAMES[0]);
  const [end, setEnd] = useState(false);
  const [start, setStart] = useState(false);

  const handleClick = () => {
    counter++;

    if (counter > NAMES.length - 1) {
      return setEnd(true);
    }

    setCurrentUser(NAMES[counter]);
  };

  if (!start) {
    return (
      <div className={styles.container}>
        <h1>Are you ready?</h1>
        <img
          className={styles.mainPhoto}
          src="https://media.tenor.com/NNp_ehNBMEoAAAAM/excited-so.gif"
        ></img>
        <button onClick={() => setStart(true)}>Start</button>
      </div>
    );
  }

  if (end) {
    return (
      <div className={styles.container}>
        <img
          className={styles.mainPhoto}
          src="https://img1.picmix.com/output/pic/normal/5/3/5/6/7416535_1f01a.gif"
        />
        <h1>Thank you!</h1>
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.container}>
        <div className={styles.projectContainer}>
          <img src={project.avatarUrls["48x48"]} />
          <h2>{project.name}</h2>
        </div>

        <div>
          <Person data={users[currentUser]} onClick={handleClick} />
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  return Promise.all([getProject(), ...getUserPromises()]).then(
    ([data, ...users]) => {
      return {
        props: {
          project: data,
          users: reduceByIndexOrder(JIRA_USERS, users),
        },
      };
    }
  );
}
