import { useState, useEffect } from "react";
import Head from "next/head";

import styles from "@/styles/Home.module.css";

import Person from "@/components/person";
import Button from "@/components/button";

import { SECONDS } from "@/constants/constants";
import { getProject, getUserPromises } from "@/services/jira";
import { reduceByIndexOrder } from "@/helpers/index";
import { JIRA_USERS, NAMES } from "@/constants/constants";

let peopleCounter = 0;

type HomeProps = {
  project: Project;
  users:
    | {
        [K in keyof JIRA_USERS]: User;
      };
};

export default function Home({ project, users }: HomeProps) {
  const [currentUser, setCurrentUser] = useState<keyof typeof JIRA_USERS>(
    NAMES[0]
  );
  const [counter, setCounter] = useState(SECONDS);
  const [end, setEnd] = useState(false);
  const [start, setStart] = useState(false);

  useEffect(() => {
    const interval = setInterval(() => {
      if (counter > 0) {
        setCounter((counter) => counter - 1);
      }
    }, 1000);

    return () => {
      return clearInterval(interval);
    };
  }, []);

  const handleNextPerson = () => {
    peopleCounter++;

    if (peopleCounter > NAMES.length - 1) {
      return setEnd(true);
    }

    setCounter(60);
    setCurrentUser(NAMES[peopleCounter]);
  };

  if (!start) {
    return (
      <>
        <h2 className={styles.projectName}>{project.name}</h2>
        <div className={styles.container}>
          <h1 className={styles.title}>Are you ready?</h1>
          <img
            className={styles.entryPhoto}
            src="https://i.gifer.com/origin/0b/0b2157f45bff10c821635c1749ad47d1_w200.gif"
          ></img>
          <Button onClick={() => setStart(true)} centered>
            Begin Stand Up
          </Button>
        </div>
      </>
    );
  }

  if (end) {
    return (
      <>
        <h2 className={styles.projectName}>{project.name}</h2>
        <div className={styles.container}>
          <h1 className={styles.title}>Thank you!</h1>
          <img
            className={styles.mainPhoto}
            src="https://img1.picmix.com/output/pic/normal/5/3/5/6/7416535_1f01a.gif"
          />
          <p className={styles.note}>You may now close this tab</p>
        </div>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h2 className={styles.projectName}>{project.name}</h2>
      <main className={styles.container}>
        <div>
          {users[currentUser] && (
            <Person
              data={users[currentUser]}
              handleNextPerson={handleNextPerson}
              counter={counter}
            />
          )}
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  return Promise.all([getProject(), ...getUserPromises()]).then(
    ([project, ...users]) => {
      return {
        props: {
          project,
          users: reduceByIndexOrder(JIRA_USERS, users),
        },
      };
    }
  );
}
